#!/usr/bin/perl

# mengwong@pobox.com Thu Jan 31 20:07:48 SGT 2013
# 
# asana to org-mode roundtrip integration
#
# this is a2o. there is also o2a. or there will be, one day, i hope.

use strict;
use WWW::Asana;
use feature qw(say);
use YAML;

my $asana = WWW::Asana->new(
  api_key => shift, # maybe chuck this in .netrc or whatever
);

my %asana;

my $me = $asana->me;

say "-*- mode: org; mode: auto-revert -*-";
say "#+TITLE: " . $me->name . "'s Asana";

print_properties({asana_id   =>$me->id,
				  asana_name =>$me->name,
				  asana_email=>$me->email});

say "* Other Users";

# this is important to build the userid cache in WWW::Asana::Users.
for (@{$asana->users}) {
  say "- " . $_->name . " (" . $_->email . ")";

			$asana{users}{$_->id}->{name}  = $_->name;
			$asana{users}{$_->id}->{email} = $_->email;

}

my %output;

my $current_me = $me->reload;

say "* workspaces";
$|++;

sub print_properties {
	my $properties = shift;
	say ":PROPERTIES:";
	say ":$_: $properties->{$_}" for keys %$properties;
	say ":END:";
}
sub semidie {
	warn "received @_\n";
	print Dump(\%asana);
	exit;
}

$SIG{'INT'} = \&semidie;

eval {
foreach my $workspace ( @{$me->workspaces} ) {
	say "** " . $workspace->name . "		:workspace:";

		$asana{workspaces}{$workspace->id}->{name} = $workspace->name;

	foreach my $tag ( @{$workspace->tags} ) {
		say "*** tag: " . $tag->name;
		$asana{workspaces}{$workspace->id}->{tags}{$tag->id}->{name} = $tag->name;
	}

	foreach my $project ( @{$workspace->projects} ) {
		say "*** " . $project->name . "		:project:";

			$asana{workspaces}{$workspace->id}->{projects}{$project->id}->{name} = $project->name;

		foreach my $task ( @{$project->tasks($me)} ) {
			my $tags = $task->tags;
			printf "**** %s %s%s%s\n", ($task->completed eq "true" ? "DONE" : "TODO",
										$task->name,
										("\t\t\t", join (":", "", "task", (@{$task->tags}? map { $_->name } @{$task->tags} : ()), "")));

			my %properties;
			$properties{COMPLETED} = $task->completed . "";
			$properties{ASSIGNEE} = $task->assignee->name if $task->assignee;
			$properties{ASSIGNEE_STATUS} = $task->assignee_status;
			$properties{DUE_ON} = $task->due_on_value if $task->has_due_on;
			$properties{CREATED_AT} = $task->created_at."" if $task->has_created_at;
			$properties{PROJECTS} = join ", ", map { $_->name } @{ $task->projects } if @{ $task->projects };
			$properties{URL} = sprintf ("https://app.asana.com/0/%s/%s", $me->id, $task->id);

			print_properties(\%properties);
			say $task->notes if $task->notes;

			$asana{workspaces}{$workspace->id}->{projects}{$project->id}->{tasks}{$task->id}->{name} = $task->name;
			$asana{workspaces}{$workspace->id}->{projects}{$project->id}->{tasks}{$task->id}->{properties} = \%properties;
			$asana{workspaces}{$workspace->id}->{projects}{$project->id}->{tasks}{$task->id}->{note} = $task->notes;
		}
	}
}};

print Dump(\%asana);


